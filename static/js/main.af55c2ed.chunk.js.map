{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Business","this","props","business","className","onClick","window","open","url","src","imageSrc","alt","name","address","city","state","zipCode","distance","toFixed","category","toUpperCase","rating","reviewCount","React","Component","BusinessList","businesses","map","id","SearchBar","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","handlesortByChange","handleSortByChange","handleKeyPress","sortByOptions","sortByOption","setState","searchYelp","e","target","value","key","Object","keys","sortByOptionValue","getSortByClass","renderSortByOptions","placeholder","onChange","onKeyPress","Yelp","fetch","headers","Authorization","then","response","json","jsonResponse","console","log","image_url","address1","zip_code","categories","title","review_count","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af55c2ed.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\nclass Business extends React.Component {\r\n  render() {\r\n    const { business } = this.props;\r\n    return (\r\n      <div className=\"Business\">\r\n        <div className=\"image-container\" onClick={() => {\r\n          window.open(this.props.business.url, '_blank');\r\n        }}>\r\n          <img src={this.props.business.imageSrc} alt=''/>\r\n        </div>\r\n        <h2>{this.props.business.name}</h2>\r\n        <div className=\"Business-information\">\r\n          <div className=\"Business-location\">  \r\n            <div className=\"Business-address\" onClick={() => {\r\n              window.open(`https://www.google.com/maps/place/${this.props.business.address}, ${this.props.business.city}, ${this.props.business.state}, ${this.props.business.zipCode}`, '_blank');\r\n            }}>\r\n              <p>{this.props.business.address}</p>\r\n              <p>{this.props.business.city}</p>\r\n              <p>{` ${this.props.business.state}, ${this.props.business.zipCode}`}</p>\r\n            </div>\r\n            <div className=\"Business-distance\">\r\n              <p>{(this.props.business.distance / 1609).toFixed(2)} miles</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"Business-reviews\">\r\n            <h3>{this.props.business.category.toUpperCase()}</h3>\r\n            <h3 className=\"rating\">{`${this.props.business.rating} stars`}</h3>\r\n            <p>{` ${this.props.business.reviewCount} reviews`}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\n\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"BusinessList\">\r\n                {\r\n                    this.props.businesses.map((business) => {\r\n                        return <Business key={business.id} business={business}/>;\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BusinessList;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n      \r\n    this.state = {\r\n      term: '',\r\n      location: '',\r\n      sortBy: 'best_match'\r\n    };\r\n\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handlesortByChange = this.handleSortByChange.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n\r\n    this.sortByOptions = {\r\n      'Best Match': 'best_match',\r\n      'Highest Rated': 'rating',\r\n      'Most Reviewed': 'review_count',\r\n      'Distance': 'distance'\r\n    };          \r\n  }\r\n        \r\n  getSortByClass(sortByOption) {\r\n    if (this.state.sortBy === sortByOption) {\r\n      return 'active';\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  // additional functionality added on lines 38. and 39. to automatically handle results upon a change in sorting option \r\n  // **troubleshoot** \r\n  //   1.) method isn't returning results in proper order \r\n  handleSortByChange(sortByOption) { \r\n    this.setState({ sortBy: sortByOption }, () => {\r\n      if (this.state.term && this.state.location) {\r\n        this.props.searchYelp(this.state.term, this.state.location, sortByOption);\r\n      }\r\n    });\r\n  }\r\n\r\n  // handles business name (term) input from the user\r\n  handleTermChange(e) {\r\n    // updates state\r\n    this.setState({ term: e.target.value });\r\n  }\r\n\r\n  // handles location input from the user\r\n  handleLocationChange(e) {\r\n    // updates state\r\n    this.setState({ location: e.target.value });\r\n  }\r\n\r\n  \r\n  \r\n  handleSearch(e) {\r\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n    \r\n    // e.preventDefault();\r\n  }\r\n  \r\n  // --addtional feature-- sortByDistance method  **troubleshoot**\r\n  handleSortByDistance(e) {\r\n    \r\n  }\r\n  \r\n  // --additional feature-- onKeyPress Enter method \r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleSearch();\r\n    }\r\n  }\r\n\r\n  // provides visual feedback/confirmation on sorting option that has been chosen by highlighting the chosen sorting option\r\n  renderSortByOptions() {\r\n    return Object.keys(this.sortByOptions).map(sortByOption => {\r\n      let sortByOptionValue = this.sortByOptions[sortByOption];\r\n      return <li className={this.getSortByClass(sortByOptionValue)} key={sortByOptionValue} onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>{sortByOption}</li>;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        <div className=\"SearchBar-sort-options\">\r\n          <ul>\r\n            {this.renderSortByOptions()}\r\n          </ul>\r\n        </div>\r\n        <div className=\"SearchBar-fields\">\r\n          <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} onKeyPress={this.handleKeyPress} />\r\n          <input placeholder=\"Where?\" onChange={this.handleLocationChange} onKeyPress={this.handleKeyPress} />\r\n        </div>\r\n        <div className=\"SearchBar-submit\">\r\n          <a onClick={this.handleSearch}>Let's Go</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SearchBar;","const apiKey = 'DPYsiyO073kBxmfLQkvIbf3WLwNUe4EPNKyuqafTwhTyjQXbJ-DEo82jKqTRG7szvoknAUIia7HGZl-0yVLgnaiGf-0-aBVZoK0LjGcpmGNOjOzXGOWd3wP8X2TNX3Yx';\r\n\r\n// Yelp module\r\nconst Yelp = {\r\n    searchYelp(term, location, sortBy) {\r\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${apiKey}`\r\n            },\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((jsonResponse) => {\r\n            if (jsonResponse.businesses) {\r\n                return jsonResponse.businesses.map((business) => {\r\n                    console.log(business);\r\n                    return {\r\n                        id: business.id,\r\n                        imageSrc: business.image_url,\r\n                        name: business.name,\r\n                        address: business.location.address1,\r\n                        city: business.location.city,\r\n                        state: business.location.state,\r\n                        zipCode: business.location.zip_code,\r\n                        category: business.categories[0].title,\r\n                        rating: business.rating,\r\n                        reviewCount: business.review_count,\r\n                        url: business.url,\r\n                        distance:business.distance\r\n                    };\r\n                });\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport default Yelp;","import React from 'react';\nimport './App.css';\n\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\n\nimport Yelp from '../../util/Yelp';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: []\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n  \n  searchYelp(term, location, sortBy) {\n    Yelp.searchYelp(term, location, sortBy).then((businesses) => {\n      this.setState({ businesses: businesses });\n    });\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n          <SearchBar searchYelp={this.searchYelp} />\n          <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  } \n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}